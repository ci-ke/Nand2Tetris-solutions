function Screen.init 2
push constant 16384
pop static 1
push constant 24575
pop static 2
push constant 511
pop static 3
push constant 255
pop static 4
push constant 32
pop static 5
push constant 16
pop static 6
push static 6
call Array.new 1
pop static 0
push constant 1
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push static 6
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
pop static 7
call Screen.clearScreen 0
pop temp 0
push constant 0
return
function Screen.clearScreen 1
push static 1
pop local 0
label WHILE_EXP0
push local 0
push static 2
lt
push constant 1
add
not
if-goto WHILE_END0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 7
push constant 0
return
function Screen.drawPixel 2
push argument 0
push constant 0
lt
push argument 0
push static 3
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 4
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 7
call Sys.error 1
pop temp 0
label IF_FALSE0
push static 1
push argument 1
push static 5
call Math.multiply 2
add
push argument 0
push static 6
call Math.divide 2
add
pop local 0
push argument 0
push argument 0
push static 6
call Math.divide 2
push static 6
call Math.multiply 2
sub
pop local 1
push static 7
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 1
call Screen.set_bit 2
pop temp 0
goto IF_END1
label IF_FALSE1
push local 0
push local 1
call Screen.reset_bit 2
pop temp 0
label IF_END1
push constant 0
return
function Screen.set_bit 1
push argument 0
call Memory.peek 1
pop local 0
push local 0
push argument 1
push static 0
add
pop pointer 1
push that 0
or
pop local 0
push argument 0
push local 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.reset_bit 1
push argument 0
call Memory.peek 1
pop local 0
push local 0
push argument 1
push static 0
add
pop pointer 1
push that 0
not
and
pop local 0
push argument 0
push local 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 8
push argument 0
push constant 0
lt
push argument 0
push static 3
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 4
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 8
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 2
push constant 0
lt
push argument 2
push static 3
gt
or
push argument 3
push constant 0
lt
or
push argument 3
push static 4
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 8
call Sys.error 1
pop temp 0
label IF_FALSE1
push argument 0
push argument 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push argument 3
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
pop local 7
push argument 3
pop argument 1
push local 7
pop argument 3
label IF_FALSE3
label WHILE_EXP0
push argument 1
push argument 3
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
label IF_FALSE2
push argument 1
push argument 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
push argument 2
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 0
pop local 7
push argument 2
pop argument 0
push local 7
pop argument 2
label IF_FALSE5
label WHILE_EXP1
push argument 0
push argument 2
push constant 1
add
lt
not
if-goto WHILE_END1
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 0
push constant 1
add
pop argument 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
label IF_FALSE4
push argument 2
push argument 0
sub
pop local 1
push argument 3
push argument 1
sub
pop local 2
push local 1
push constant 0
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 1
pop local 5
goto IF_END6
label IF_FALSE6
push constant 1
neg
pop local 5
label IF_END6
push local 2
push constant 0
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 1
pop local 6
goto IF_END7
label IF_FALSE7
push constant 1
neg
pop local 6
label IF_END7
push local 1
call Math.abs 1
pop local 1
push local 2
call Math.abs 1
pop local 2
push constant 0
pop local 0
push constant 0
pop local 3
push constant 0
pop local 4
label WHILE_EXP2
push local 3
call Math.abs 1
push local 1
push constant 1
add
lt
push local 4
call Math.abs 1
or
push local 2
push constant 1
add
lt
not
if-goto WHILE_END2
push argument 0
push local 3
add
push argument 1
push local 4
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 0
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 4
push local 6
add
pop local 4
push local 0
push local 1
sub
pop local 0
goto IF_END8
label IF_FALSE8
push local 3
push local 5
add
pop local 3
push local 0
push local 2
add
pop local 0
label IF_END8
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Screen.drawRectangle 1
push argument 0
push constant 0
lt
push argument 0
push static 3
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 4
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 9
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 2
push constant 0
lt
push argument 2
push static 3
gt
or
push argument 3
push constant 0
lt
or
push argument 3
push static 4
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 9
call Sys.error 1
pop temp 0
label IF_FALSE1
push argument 1
push argument 3
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
pop local 0
push argument 3
pop argument 1
push local 0
pop argument 3
label IF_FALSE2
label WHILE_EXP0
push argument 1
push argument 3
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 1
push argument 0
push constant 0
lt
push argument 0
push static 3
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push static 4
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 12
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 2
push constant 0
lt
push argument 2
push constant 181
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 13
call Sys.error 1
pop temp 0
label IF_FALSE1
push argument 2
neg
pop local 0
label WHILE_EXP0
push local 0
push argument 2
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
sub
push argument 1
push local 0
add
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
